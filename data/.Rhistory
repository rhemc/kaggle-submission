install.packages('ht2')
install.packages('h2o')
require(h20)
require(h2o)
h2o.init(nthreads=-1)
source('~/Desktop/sta314/R/new.r')
partitions[[1]]
h2o.init(nthreads=-1)
partitions <- h2o.splitFrame(data,0.8)
data <- as.h2o(data)
head(data)
class(data)
partitions <- h2o.splitFrame(data,0.8)
model <- h2o.deeplearning(x,y,partitions[[1]])
names(data)
names(data)[-1]
partitions <- h2o.splitFrame(x,'y',data,0.8)
x = names(data)[-1]
partitions <- h2o.splitFrame(x,'y',data,0.8)
class(data)
class(x)
x <- setdiff(names(data), y)
y <- "y"
x <- setdiff(names(data), y)
x
class(x)
class(y)
partitions <- h2o.splitFrame(x,y,data,0.8)
partitions <- h2o.splitFrame(data,0.8)
model <- h2o.deeplearning(x,y,partitions[[1]])
source('~/Desktop/sta314/R/new.r')
source('~/Desktop/sta314/R/new.r')
partitions[[2]]
partitions[[2]]$y
predictions
?as.h2o
source('~/Desktop/sta314/R/new.r')
data
predictions$predict
class(predictions)
head(predictions)
head(partitions[[2]]$y)
partitions[[2]]
head(predictions)
h2o.performance(model,partitions[[1]])
source('~/Desktop/sta314/R/new.r')
h2o.performance(model,partitions[[1]])
print(rmse(partitions[[2]]$y,predictions))
source('~/Desktop/sta314/R/new.r')
h2o.shutdown()
source('~/Desktop/sta314/R/new.r')
?h2o.splitFrame
source('~/Desktop/sta314/R/new.r')
system.file()
getwd()
setwd('..')
getwd()
setwd('data/')
system.file()
system.file('test_predictors.csv')
system.file('test_predictors.csv')
system.file('test_predictors.csv',package="h2i")
system.file('test_predictors.csv',package="h2o")
sizeof(data)
object.size(data)
?h2o.importFile
h2o.removeAll()
h2o.init(nthreads=-1)
h2o.import_file('/home/kurt/Desktop/sta314/data/trainingdata.csv',destination_frame="trainingdata.hex")
h2o.import_file('/home/kurt/Desktop/sta314/data/test_predictors.csv',destination_frame="test_predictors.hex")
h2o.importFile('/home/kurt/Desktop/sta314/data/trainingdata.csv',destination_frame="trainingdata.hex")
h2o.importFile('/home/kurt/Desktop/sta314/data/test_predictors.csv',destination_frame="test_predictors.hex")
h2o.importFile('/home/kurt/Desktop/sta314/data/trainingdata.csv',destination_frame="trainingdata.hex")
h2o.importFile('/home/kurt/Desktop/sta314/data/trainingdata.csv',destination_frame="trainingdata.hex")
?h2o.loadModel
?h2o.saveModel
temp <- h2o.getModel('metalearner_AUTO_StackedEnsemble_AllModels_0_AutoML_20181130_005328')
temp
temp <- h2o.getModel(metalearner_AUTO_StackedEnsemble_BestOfFamily_0_AutoML_20181130_005328')
temp
)
;
';'
temp <- h2o.getModel('metalearner_AUTO_StackedEnsemble_BestOfFamily_0_AutoML_20181130_005328')
temp
temp
h2o.predict(temp,predict_these)
h2o.predict(temp,as.h20(predict_these))
h2o.predict(temp,as.h2o(predict_these))
h2o.predict(temp,as.h2o(predict_these[,-1]))
predict_these$y <- predict_these$X1.500
predict_these$X1.500 <- NULL
head(predict_these)
h2o.predict(temp,as.h2o(predict_these))
